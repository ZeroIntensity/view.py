[build-system]
requires = ["setuptools", "toml"]
build-backend = "setuptools.build_meta"

[project]
name = "view.py"
description = 'The Batteries-Detachable Web Framework.'
readme = "README.md"
requires-python = ">=3.8"
keywords = []
authors = [
  { name = "ZeroIntensity", email = "zintensitydev@gmail.com" },
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    "rich",
    "click",
    "typing_extensions",
    "orjson",
    "configzen",
    "aiofiles",
    "prompts.py"
]
dynamic = ["version", "license"]

[project.optional-dependencies]
dev = [
  "ruff",
  "mypy"
]
databases = [
    "psycopg2-binary",
    "mysql-connector-python",
    "pymongo",
    "aiosqlite"
]
templates = ["beautifulsoup4", "jinja2", "mako", "django", "chameleon", "markdown"]
fancy = ["psutil", "plotext"]
servers = ["uvicorn[websockets]", "hypercorn", "daphne"]
full = [
    "psutil",
    "plotext",
    "beautifulsoup4",
    "jinja2",
    "mako",
    "django",
    "chameleon",
    "attrs",
    "psycopg2-binary",
    "mysql-connector-python",
    "pymongo",
    "aiosqlite",
    "markdown",
    "uvicorn",
    "hypercorn",
    "daphne"
]

[project.urls]
Documentation = "https://view.zintensity.dev"
Issues = "https://github.com/ZeroIntensity/view.py/issues"
Source = "https://github.com/ZeroIntensity/view.py"
Funding = "https://github.com/sponsors/ZeroIntensity"

[tool.hatch.version]
path = "src/view/__about__.py"

[tool.hatch.envs.docs]
dependencies = ["mkdocs", "mkdocstrings[python]", "mkdocs-material", "mkdocs-git-revision-date-localized-plugin"]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build"
serve = "mkdocs serve"

[tool.hatch.envs.tests]
dependencies = [
  "ward",
  "coverage",
]

[tool.hatch.envs.tests.scripts]
cov = "coverage run -m ward"
no-cov = "ward"

[[tool.hatch.envs.test.matrix]]
python = ["38", "39", "310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "src/view.py/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ward]
path = ["tests"]
capture-output = true
order = "standard"
test-output-style = "test-per-line"
fail-limit = 5
progress-style = ["bar"]


# [tool.hatch.build]
# include = ["src/view/**/*.py", "src/_view/_view.pyi"]

# [tool.hatch.build.targets.wheel]
# packages = ["src/view"]

# [tool.hatch.build.hooks.custom]
# enable-by-default = true

# [tool.hatch.build.targets.wheel.hooks.autorun]
# dependencies = ["hatch-autorun"]
# code = "import view._codec"

[project.scripts]
view = "view.__main__:main"
view-admin = "view.__main__:main"

[tool.mypy]
exclude = ["src/view/databases.py", "src/view/components.py", "src/view/_codec.py"]
ignore_missing_imports = true
follow_imports = "skip"
enable_incomplete_feature = ["Unpack"]
